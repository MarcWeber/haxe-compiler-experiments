# Makefile generated by OCamake 
# http://tech.motion-twin.com
.SUFFIXES : .ml .mli .cmo .cmi .cmx .mll .mly

CFLAGS=-g -I ../neko/libs/include/ocaml
LIBS=extLib.cmxa extc.cmxa swfLib.cmxa unix.cmxa xml-light.cmxa
LFLAGS=-g -o haxe.exe -I ../neko/libs/include/ocaml
OUTPUT=sed 's/File "\([^"]\+\)", line \([0-9]\+\), \(.*\)/\1(\2): \3/' tmp.cmi

FILES = ../neko/libs/include/ocaml/nast.cmx ast.cmx common.cmx ../neko/libs/include/ocaml/nxml.cmx ../neko/libs/include/ocaml/binast.cmx lexer.cmx type.cmx parser.cmx transform.cmx typer.cmx genswf9.cmx genswf8.cmx genneko.cmx genjs.cmx genswf.cmx genxml.cmx genas3.cmx main.cmx

all: haxe.exe

haxe.exe: $(FILES)
	ocamlopt $(LFLAGS) $(LIBS) $(FILES)

genneko.cmx: typer.cmx type.cmx common.cmx ../neko/libs/include/ocaml/binast.cmx ../neko/libs/include/ocaml/nast.cmx lexer.cmx ast.cmx

../neko/libs/include/ocaml/binast.cmx: ../neko/libs/include/ocaml/nast.cmx

../neko/libs/include/ocaml/nxml.cmx: ../neko/libs/include/ocaml/nast.cmx

genjs.cmx: typer.cmx type.cmx transform.cmx ast.cmx

genas3.cmx: typer.cmx type.cmx transform.cmx ast.cmx

genswf.cmx: typer.cmx type.cmx common.cmx genswf8.cmx genswf9.cmx

genswf8.cmx: typer.cmx type.cmx transform.cmx common.cmx ast.cmx

genswf9.cmx: type.cmx ast.cmx typer.cmx transform.cmx common.cmx

genxml.cmx: typer.cmx type.cmx lexer.cmx ast.cmx

lexer.cmx: lexer.ml

lexer.cmx: ast.cmx

main.cmx: typer.cmx common.cmx parser.cmx lexer.cmx genxml.cmx genswf.cmx genneko.cmx genjs.cmx genas3.cmx ast.cmx

parser.cmx: parser.ml common.cmx lexer.cmx ast.cmx
	(ocamlopt -pp camlp4o $(CFLAGS) -c parser.ml 2>tmp.cmi && $(OUTPUT)) || ($(OUTPUT) && exit 1)

transform.cmx: type.cmx

type.cmx: ast.cmx

typer.cmx: type.cmx common.cmx parser.cmx lexer.cmx ast.cmx transform.cmx

common.cmx: type.cmx

clean:
	rm -f haxe.exe
	rm -f $(FILES) $(FILES:.cmx=.obj) $(FILES:.cmx=.cmi)

# SUFFIXES
.ml.cmo:
	ocamlc $(CFLAGS) -c $<

.ml.cmx:
	(ocamlopt $(CFLAGS) -c $< 2>tmp.cmi && $(OUTPUT)) || ($(OUTPUT) && exit 1)

.mli.cmi:
	ocamlc $(CFLAGS) $<

.mll.ml:
	ocamllex $<

.mly.ml:
	ocamlyacc $<

